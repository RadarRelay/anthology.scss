/// Sets the configuration for generating functional properties. `A(define, ...)` will throw if this mixin
/// has not been included prior.
///
/// @param {Map} $config.breakpoints - A map of responsive breakpoints [default: null].
/// @param {String} $config.separator - A string delimiter which appears between each piece of the generated selectors [default: '-'].
/// @param {String} $config.important-tag - A string which designates '!important' rules [default: '!'].
/// @param {String} $config.theme-tag - A string which designates themed rules [default: '#'].
/// @param {String} $config.responsive-tag - A string which designates responsive rules [default: '@'].
/// @param {String} $config.grid-prefix - A string which prefixes Anthology-generated grids [default: 'grid'].
/// @param {String} $config.grid-area-prefix - A string which prefixes 'grid-area' rules for Anthology-generated grids [default: 'area'].
@mixin __anthology-configure($config: ())
{

  @if not($__anthology-config-is-ready == true)
  {
    // Assign an empty map to each configured breakpoint
    @each $breakpoint, $value in map-get($config, 'breakpoints')
    {

      // "default" is reserved.
      @if $breakpoint == 'default'
      {
        @error '[anthology::configure] --- Breakpoints cannot be named `default`.';
      }

      $__anthology-cache-defaults: A(map-set,
        $__anthology-cache-defaults,
        ('responsive', $breakpoint),
        ()
      ) !global;

    }

    $escaped-config-keys: ('separator', 'important-tag', 'theme-tag', 'responsive-tag', 'grid-prefix', 'grid-area-prefix', 'theme-attr');
    @each $config-key, $value in $config
    {
      @if A(list-contains, $escaped-config-keys, $config-key)
      {
        $config: A(map-set, $config, $config-key, A(str-escape, A(map-get, $config,$config-key), 2));
      }
    }

    // Build global objects
    $__anthology-config: A(map-merge, $__anthology-config-defaults, $config) !global;
    $__anthology-cache: A(map-merge, $__anthology-cache-defaults, $__anthology-cache) !global;
    $__anthology-config-is-ready: true !global;
  }
  @else
  {
    @warn '[anthology::configure] --- `A(configure, ...)` should be included only once per Anthology-generated stylesheet.';
  }

}
