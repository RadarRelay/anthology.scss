// Ensure that `set-config(...)` has been included at least once.
@mixin __anth-validate-config-is-ready() {
  @if not $__anth-config-is-ready {
    @error 'Before defining your own functional properties, run `@include anth-config(...);`.';
  }
}

// Returns the cache with the specified key reset to its default value.
@function __anth-flush-cache($cache-key) {
  @return __anth-map-set(
    $__anth-cache,
    $cache-key,
    __anth-map-get($__anth-cache-defaults, $cache-key)
  );
}

// Merge default options for 'single selectors'.
@function __anth-single-selector-options($options: ()) {
  @return __anth-map-merge(
    (
      'breakpoint': null,
      'theme': null,
      'pseudo': null,
      'important': false,
    ),
    $options
  );
}

// Merge default options for `define-properties(...)` mixin.
@function __anth-define-options($options: ()) {
  @return __anth-map-merge(
    (
      'important': true,
      'responsive': true,
      'pseudos': null,
      'themes': null,
    ),
    $options
  );
}

@function __anth-to-json($map) {
  $typeOfArg: type-of($map);

  @if $typeOfArg == 'list'
  {
    $list: $map;
    $result: '[';
    $listLength: length($list);

    @for $i from 1 through $listLength
    {
      $list-item: nth($list, $i);
      $result: '#{$result} #{__anth-to-json($list-item)}';
      @if $i != $listLength { $result: '#{$result},'; }
    }

    $result: '#{$result} ]';
    @return $result;
  }
  @else if $typeOfArg != 'map'
  {
    @return '"#{$map}"';
  }

  $result: '{';
  $mapLength: length($map);

  @for $i from 1 through $mapLength
  {
    $entry: nth($map, $i);
    $key: nth($entry, 1);
    $value: nth($entry, 2);

    $typeOfValue: type-of($value);

    // Transform inner maps into JSON
    @if $typeOfValue == 'map' or $typeOfValue == 'list'
    {
      $result: '#{$result} "#{$key}": #{__anth-to-json($value)}';
    }
    @else
    {
      $result: '#{$result} "#{$key}": "#{$value}"';
    }


    @if $i != $mapLength { $result: '#{$result},'; }
  }

  $result: '#{$result} }';
  @return $result;
}
