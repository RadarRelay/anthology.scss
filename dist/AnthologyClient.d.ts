import { AnthologyRule, ExtractOptions } from './types';
export declare class AnthologyClient<BreakpointNames extends string> {
    private metadata;
    private stylesheet;
    private rules;
    constructor(styleSheet?: StyleSheet);
    /**
     * Get all Anthology-compatible style sheets in the document.
     *
     * @readonly
     * @static
     * @memberof Anthology
     */
    static readonly styleSheets: StyleSheet[];
    /**
     * Get breakpoints configured for this instance of `Anthology.scss`.
     *
     * @readonly
     * @type {{ [key in BreakpointNames]: string }}
     * @memberof Anthology
     */
    readonly breakpoints: {
        [key in BreakpointNames]: string;
    };
    /**
     * Parse metadata for this instance of `Anthology.scss`.
     */
    parseMetadata(): this;
    /**
     * Extract a rule from within the `Anthology.scss` style sheet on this instance.
     *
     * @param {string} shorthand
     * @param {string} adjective
     * @param {ExtractOptions} [options={}]
     * @returns {AnthologyRule}
     * @memberof AnthologyClient
     */
    extract(shorthand: string, adjective: string, options?: ExtractOptions): AnthologyRule;
    /**
     * A shortcut method to extract the `style` object from a `CSSRule` generated by `Anthology.scss`.
     *
     * @param {string} shorthand
     * @param {string} adjective
     * @param {ExtractOptions} [options={}]
     * @returns {CSSStyleDeclaration}
     * @memberof AnthologyClient
     */
    extractStyle(shorthand: string, adjective: string, options?: ExtractOptions): CSSStyleDeclaration;
    /**
     * A shortcut method to extract the _unescaped_ selector string from a `CSSRule` generated by `Anthology.scss`.
     *
     * @param {string} shorthand
     * @param {string} adjective
     * @param {ExtractOptions} [options={}]
     * @returns {CSSStyleDeclaration}
     * @memberof AnthologyClient
     */
    extractSelector(shorthand: string, adjective: string, options?: ExtractOptions): string;
    /**
     * A shortcut method to extract the _escaped_ selector string from a `CSSRule` generated by `Anthology.scss`.
     *
     * @param {string} shorthand
     * @param {string} adjective
     * @param {ExtractOptions} [options={}]
     * @returns {CSSStyleDeclaration}
     * @memberof AnthologyClient
     */
    extractSelectorEscaped(shorthand: string, adjective: string, options?: ExtractOptions): string;
    /**
     * A shortcut method to extract the `property` from a `CSSRule` generated by `Anthology.scss`.
     *
     * @param {string} shorthand
     * @param {string} adjective
     * @param {ExtractOptions} [options={}]
     * @returns {CSSStyleDeclaration}
     * @memberof AnthologyClient
     */
    extractProperty(shorthand: string, adjective: string, options?: ExtractOptions): string;
    /**
     * A shortcut method to extract the `value` from a `CSSRule` generated by `Anthology.scss`.
     *
     * @param {string} shorthand
     * @param {string} adjective
     * @param {ExtractOptions} [options={}]
     * @returns {CSSStyleDeclaration}
     * @memberof AnthologyClient
     */
    extractValue(shorthand: string, adjective: string, options?: ExtractOptions): string;
}
